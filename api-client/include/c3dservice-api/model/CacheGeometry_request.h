/**
 * OpenAPI C3D-Service
 * Open API спецификация к REST API микросервиса C3D Web Vision.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: info@c3dlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CacheGeometry_request.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CacheGeometry_request_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CacheGeometry_request_H_


#include "c3dservice-api/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  CacheGeometry_request
    : public ModelBase
{
public:
    CacheGeometry_request();
    virtual ~CacheGeometry_request();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CacheGeometry_request members

    /// <summary>
    /// Путь к модели
    /// </summary>
    utility::string_t getUrl() const;
    bool urlIsSet() const;
    void unsetUrl();

    void setUrl(const utility::string_t& value);

    /// <summary>
    /// Содержимое файла в формате base64 (используется, в случае, если файл передается с клиента)
    /// </summary>
    utility::string_t getFileContent() const;
    bool fileContentIsSet() const;
    void unsetFileContent();

    void setFileContent(const utility::string_t& value);

    /// <summary>
    /// Reader to read data
    /// </summary>
    utility::string_t getBuilder() const;
    bool builderIsSet() const;
    void unsetBuilder();

    void setBuilder(const utility::string_t& value);

    /// <summary>
    /// UUID to assign geometry
    /// </summary>
    utility::string_t getUuid() const;
    bool uuidIsSet() const;
    void unsetUuid();

    void setUuid(const utility::string_t& value);


protected:
    utility::string_t m_Url;
    bool m_UrlIsSet;
    utility::string_t m_FileContent;
    bool m_FileContentIsSet;
    utility::string_t m_Builder;
    bool m_BuilderIsSet;
    utility::string_t m_Uuid;
    bool m_UuidIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CacheGeometry_request_H_ */
