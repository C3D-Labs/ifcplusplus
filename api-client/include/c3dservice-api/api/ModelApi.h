/**
 * OpenAPI C3D-Service
 * Open API спецификация к REST API микросервиса C3D Web Vision.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: info@c3dlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.0.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ModelApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_ModelApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_ModelApi_H_



#include "c3dservice-api/ApiClient.h"

#include "c3dservice-api/model/TreeNode.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  ModelApi 
{
public:

    explicit ModelApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ModelApi();

    /// <summary>
    /// Получить все свойства и дочерние узлы для данного узла
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="xSessionID">UUID сессии</param>
    /// <param name="modelUUID">UUID модели сборки</param>
    /// <param name="nodeUUID">UUID узла сборки</param>
    /// <param name="limit">Максимальная глубина дерева дочерних узлов (optional, default to 0)</param>
    /// <param name="attrs">Перечень ключей атрибутов для извлечения. Разделяются одним символом &#39;;&#39; (name;density;volume).Без указания перечня будут извлекаться все имеющиеся атрибуты. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<TreeNode>> getNode(
        utility::string_t xSessionID,
        utility::string_t modelUUID,
        utility::string_t nodeUUID,
        boost::optional<int32_t> limit,
        boost::optional<utility::string_t> attrs
    ) const;
    /// <summary>
    /// Получить дерево сборки с атрибутами
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="xSessionID">UUID сессии</param>
    /// <param name="modelUUID">UUID модели сборки загруженной в сессию</param>
    /// <param name="limit">Максимальная глубина дерева (optional, default to 0)</param>
    /// <param name="attrs">Перечень ключей атрибутов для извлечения. Разделяются одним символом &#39;;&#39; (name;density;volume).Без указания перечня будут извлекаться все имеющиеся атрибуты. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<TreeNode>> getNodes(
        utility::string_t xSessionID,
        utility::string_t modelUUID,
        boost::optional<int32_t> limit,
        boost::optional<utility::string_t> attrs
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_ModelApi_H_ */

